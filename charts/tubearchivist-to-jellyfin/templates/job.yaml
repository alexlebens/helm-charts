apiVersion: batch/v1
kind: CronJob
metadata:
  name: tubearchivist-to-jellyfin
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: tubearchivist-to-jellyfin
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/component: job
    app.kubernetes.io/part-of: {{ .Release.Name }}
spec:
  schedule: {{ .Values.job.schedule }}
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: Never
          containers:
            - name: tubearchivist-to-jellyfin
              image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
              imagePullPolicy: {{ .Values.image.pullPolicy }}
              command: ["python"]
              args: ["main.py"]
              env:
                - name: TA_URL
                  value: "{{ .Values.config.tubearchivistUrl }}"
                - name: TA_TOKEN
                  valueFrom:
                    secretKeyRef:
                      name: "{{ .Values.secrets.tubearchivistToken.existingSecretName }}"
                      key: "{{ .Values.secrets.tubearchivistToken.existingSecretKey }}"
                - name: JF_URL
                  value: "{{ .Values.config.jellyfinUrl }}"
                - name: JF_TOKEN
                  valueFrom:
                    secretKeyRef:
                      name: "{{ .Values.secrets.jellyfinToken.existingSecretName }}"
                      key: "{{ .Values.secrets.jellyfinToken.existingSecretKey }}"
                - name: LISTEN_PORT
                  value: "8001"
              volumeMounts:
                - name: tubearchivist-youtube
                  mountPath: /youtube
          volumes:
            - name: tubearchivist-youtube
              persistentVolumeClaim:
                claimName: {{ .Values.persistence.youtube.claimName }}
