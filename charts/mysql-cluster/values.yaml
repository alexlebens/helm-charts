global:
  nameOverride:
  labels: {}
  annotations: {}

serviceAccount:
  enabled: true
  labels: {}
  annotations: {}
  name: ""

###
# Cluster mode of operation. Available modes:
# * `standalone` - Default mode. Creates new or updates an existing cluster.
# * `recovery` - Same as standalone but creates a cluster from a backup
# * `clone` - Create database as a replica from another cluster
mode: standalone

##
# Cluster spec
#
# Reference: https://dev.mysql.com/doc/mysql-operator/en/mysql-operator-properties.html#mysql-operator-spec-innodbclusterspecinitdbdumpstorages3
#
cluster:
  serverInstances: 1
  baseServerId: 1000

  # Existing secret that contains the keys "rootUser", "rootHost", and "rootPassword"
  exisitingCredentialsSecret: ""

  image:
    version: 8.4.0
    pullPolicy: IfNotPresent

  router:
    instances: 1
    podSpec: {}
    podAnnotations: {}
    podLabels: {}

  logs:
    error:
      enabled: true
      collect: false
    general:
      enabled: false
      collect: false
    slowQuery:
      enabled: false
      longQueryTime: 2.5

  serverConfig:
    mycnf: |
      [mysqld]
      core_file
      local_infile=off
      mysql_native_password=ON

  datadirVolumeClaimTemplate:
    storageClassName: ""
    accessModes: ""
    size: ""

  podSpec:
    containers:
      - name: mysql
        resources:
          limits:
            memory: 1024Mi
            cpu: 1000m
          requests:
            memory: 512Mi
            cpu: 100m
  podAnnotations: {}
  podLabels: {}

##
# Recovery database from storage
#
recovery:

  # * `s3` - Restores from s3 object store
  # * `pvc` - Restores from persistent volume claim
  type:

  # -- Name of the dump. Not used by the operator, but a descriptive hint for the cluster administrator
  name: ""
  # -- Path to the dump in the PVC. Use when specifying persistentVolumeClaim. Omit for ociObjectStorage, S3, or azure.
  path: ""
  # -- A dictionary of key-value pairs passed directly to MySQL Shell's loadDump()
  options: {}

  s3:
    # -- Path in the bucket where the dump files are stored
    prefix: ""
    # -- Name of a Secret with S3 configuration and credentials as contained in ~/.aws/config
    config: ""
    # -- Name of the S3 bucket where the dump is stored
    bucketName: ""
    # -- Override endpoint URL
    endpoint: ""

  persistentVolumeClaim: {}

##
# Clone database from another instance
#
clone:
  donorUrl: ""
  rootUser: root
  exisitingCredentialsSecret: ""

##
# Backup database to pvc or s3
#
backup:
  enabled: false
  profiles:

## -- Example profile that back ups to local pvc

#    - name: pvc-backup
#      dumpInstance:
#        storage:
#          persistentVolumeClaim:
#            claimName: backup-volume-claim

## -- Example profile that back ups to s3 endpoint

#    - name: s3-backup
#      snapshot:
#        storage:
#          s3:
#            prefix: ""
#            config: ""
#            bucketName: ""
#            endpoint: ""

  schedules:

## -- Example schedule that backups daily

#    - name: schedule-daily
#      enabled: true
#      schedule: "0 0 0 * * *"
#      timeZone: "US/Central"
#      deleteBackupData: false
#      backupProfileName:
