apiVersion: apps/v1
kind: Deployment
metadata:
  name: matrix-hookshot
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: matrix-hookshot
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/component: web
    app.kubernetes.io/part-of: {{ .Release.Name }}
spec:
  revisionHistoryLimit: 3
  replicas: {{ .Values.deployment.replicas }}
  strategy:
    type: {{ .Values.deployment.strategy }}
  selector:
    matchLabels:
      app.kubernetes.io/name: matrix-hookshot
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: matrix-hookshot
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ .Release.Name }}
      automountServiceAccountToken: true
      containers:
        - name: matrix-hookshot
          image: "{{ .Values.deployment.image.repository }}:{{ .Values.deployment.image.tag }}"
          imagePullPolicy: {{ .Values.deployment.image.imagePullPolicy }}
          ports:
            - name: webhook
              containerPort: {{ .Values.service.webhook.port }}
              protocol: TCP
            - name: metrics
              containerPort: {{ .Values.service.metrics.port }}
              protocol: TCP
            - name: appservice
              containerPort: {{ .Values.service.appservice.port }}
              protocol: TCP
          env:
          {{- range $k,$v := .Values.deployment.env }}
            - name: {{ $k }}
              value: {{ $v | quote }}
          {{- end }}
          {{- with .Values.deployment.envFrom }}
          envFrom:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.deployment.resources | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: /data/config.yml
              subPath: config.yml
              readOnly: true
            - name: registration
              mountPath: /data/registration.yml
              subPath: registration.yml
              readOnly: true
            - name: passkey
              mountPath: "/data/{{ .Values.hookshot.config.passFile }}"
              subPath: "{{ .Values.hookshot.config.passFile }}"
              readOnly: true
      volumes:
        - name: config
          secret:
            secretName: {{ template "hookshot.secretName" . }}
        - name: registration
          secret:
            secretName: {{ template "hookshot.registrationSecretName" . }}
        - name: passkey
          secret:
            secretName: {{ template "hookshot.passkeySecretName" . }}
