{{- if .Values.ingress.enabled }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: home-assistant
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: home-assistant
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/component: web
    app.kubernetes.io/part-of: {{ .Release.Name }}
    app.kubernetes.io/managed-by: helm
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-issuer
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
spec:
  ingressClassName: "{{ .Values.ingress.host }}"
  tls:
    - hosts:
        - "{{ .Values.ingress.host }}"
      secretName: "{{ .Release.Name }}-secret-tls"
  rules:
    - host: "{{ .Values.ingress.host }}"
      http:
        paths:
          - path: /outpost.goauthentik.io/
            pathType: Prefix
            backend:
              service:
                name: "{{ .Values.ingress.authentik.outpost }}"
                port:
                  number: {{ .Values.ingress.authentik.port }}
    - host: "{{ .Values.ingress.host }}"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: http
                port:
                  number: {{ .Values.service.http.port }}
{{- end }}

---
{{- if and .Values.codeserver.ingress.enabled .Values.codeserver.enabled }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: codeserver-home-assistant
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: codeserver
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/component: web
    app.kubernetes.io/part-of: {{ .Release.Name }}
    app.kubernetes.io/managed-by: helm
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-issuer
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
spec:
  ingressClassName: "{{ .Values.codeserver.ingress.host }}"
  tls:
    - hosts:
        - "{{ .Values.codeserver.ingress.host }}"
      secretName: "codeserver-{{ .Release.Name }}-secret-tls"
  rules:
    - host: "{{ .Values.codeserver.ingress.host }}"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: codeserver-http
                port:
                  number: {{ .Values.codeserver.service.http.port }}
{{- end }}
