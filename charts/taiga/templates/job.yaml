{{- if .Values.createInitialUser }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "taiga.fullname" . }}-create-initial-user
  namespace: {{ .Release.Namespace }}
  annotations:
    {{- with .Values.global.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  labels:
    {{- include "taiga.labels" . | nindent 4 }}
    {{- with .Values.global.labels }}
    {{ toYaml . | nindent 4 }}
    {{- end }}
spec:
  backoffLimit: 4
  template:
    spec:
      {{- if .Values.back.nodeSelector }}
      nodeSelector:
        {{ toYaml .Values.back.nodeSelector | nindent 8 }}
      {{- end }}
      restartPolicy: Never
      containers:
      - name: {{ template "taiga.fullname" . }}-create-initial-user
        image: "{{ .Values.back.image.repository }}:{{ .Values.back.image.tag }}"
        imagePullPolicy: {{ .Values.back.image.pullPolicy }}
        command:
          - sh
          - /scripts/createinitialuser.sh
        volumeMounts:
          - name: create-initial-user
            mountPath: /scripts
        env:
          - name: TAIGA_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.secretKey.existingSecretName }}"
                key: "{{ .Values.secretKey.existingSecretKey }}"
          - name: POSTGRES_USERNAME
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.postgresql.existingSecretName }}"
                key: "{{ .Values.postgresql.usernameKey }}"
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.postgresql.existingSecretName }}"
                key: "{{ .Values.postgresql.passwordKey }}"
          - name: POSTGRES_DATABASE_NAME
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.postgresql.existingSecretName }}"
                key: "{{ .Values.postgresql.databaseNameKey }}"
          - name: POSTGRES_DATABASE_HOST
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.postgresql.existingSecretName }}"
                key: "{{ .Values.postgresql.hostKey }}"
      volumes:
        - name: create-initial-user
          configMap:
            name: {{ template "taiga.fullname" . }}-create-initial-user
            defaultMode: 0744
{{- end }}
